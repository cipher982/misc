[project]
name = "transformer-intuition-lab"
version = "0.2.0"
description = "Educational transformer implementation with maximum transparency"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Transformer Intuition Lab", email = "team@transformer-lab.dev"}
]
requires-python = "==3.13.*"
dependencies = [
    "numpy>=2.0.0",
    "streamlit>=1.32.0",
    "matplotlib>=3.8.0",
    "plotly>=5.17.0",
]


[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # bandit security
    "T20", # flake8-print
    "PT",  # flake8-pytest-style
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # pylint
    "TRY", # tryceratops
    "NPY", # numpy-specific rules
    "PERF", # perflint
]
ignore = [
    "E501",   # line too long, handled by formatter
    "B008",   # do not perform function calls in argument defaults
    "C901",   # too complex
    "PLR0913", # too many arguments
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "S101",   # use of assert (common in tests)
    "T201",   # print statements (educational code)
    "ARG002", # unused method argument (common in abstract methods)
    "PTH123", # open() should be Path.open() (not always needed)
    "TRY003", # avoid specifying long messages outside exception class
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011", "S101", "PLR2004"]
"**/test_*.py" = ["S101", "PLR2004"]
"simple_*.py" = ["T201"]  # Allow prints in educational demos

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=simple_transformer",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["simple_transformer", "simple_config"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-xdist>=3.5.0",
    "playwright>=1.40.0",
    "pytest-playwright>=0.4.0",
    "ruff>=0.8.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "memory-profiler>=0.61.0",
    "psutil>=5.9.0",
]
